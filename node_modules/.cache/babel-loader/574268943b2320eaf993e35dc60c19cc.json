{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Its osama\\\\OneDrive\\\\Desktop\\\\py4e\\\\chatAppReact\\\\chat_application\\\\src\\\\components\\\\ChatFeed.jsx\";\nimport MessageForm from \"./MessageForm\";\nimport MyMessage from \"./MyMessage\";\nimport TheirMessage from \"./TheirMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatFeed = props => {\n  const {\n    chats,\n    activeChat,\n    userName,\n    messages\n  } = props;\n  const chat = chats && chats[activeChat]; //For message rending in form of bubble\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.userName;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-block\",\n          children: isMyMessage ? /*#__PURE__*/_jsxDEV(MyMessage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(TheirMessage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"read-reciepts\",\n          style: {\n            marginRight: isMyMessage ? '18px' : '0px',\n            marginLeft: isMyMessage ? '0px' : '68px'\n          },\n          children: \"read-reciept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)]\n      }, `msg_${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  renderMessages();\n  console.log(chat, userName, messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ChatFeed\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChatFeed;\nexport default ChatFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatFeed\");","map":{"version":3,"sources":["C:/Users/Its osama/OneDrive/Desktop/py4e/chatAppReact/chat_application/src/components/ChatFeed.jsx"],"names":["MessageForm","MyMessage","TheirMessage","ChatFeed","props","chats","activeChat","userName","messages","chat","renderMessages","keys","Object","map","key","index","message","lastMessageKey","isMyMessage","sender","width","marginRight","marginLeft","console","log"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAU;AAEvB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA,QAApB;AAA8BC,IAAAA;AAA9B,MAA0CJ,KAAhD;AAEA,QAAMK,IAAI,GAAGJ,KAAK,IAAIA,KAAK,CAACC,UAAD,CAA3B,CAJuB,CAMvB;;AACA,QAAMI,cAAc,GAAG,MAAK;AACxB,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYH,QAAZ,CAAb;AAEA,WAAOG,IAAI,CAACE,GAAL,CAAS,CAACC,GAAD,EAAKC,KAAL,KAChB;AACI,YAAMC,OAAO,GAAGR,QAAQ,CAACM,GAAD,CAAxB;AACA,YAAMG,cAAc,GAAGF,KAAK,KAAK,CAAV,GAAc,IAAd,GAAqBJ,IAAI,CAACI,KAAK,GAAC,CAAP,CAAhD;AACA,YAAMG,WAAW,GAAGX,QAAQ,KAAKS,OAAO,CAACG,MAAR,CAAeZ,QAAhD;AAEA,0BACI;AAA6B,QAAA,KAAK,EAAE;AAACa,UAAAA,KAAK,EAAG;AAAT,SAApC;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,oBAEQF,WAAW,gBAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBAAF,gBAAiB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAFpC;AAAA;AAAA;AAAA;AAAA,gBADA,eAMQ;AAAK,UAAA,SAAS,EAAC,eAAf;AAA+B,UAAA,KAAK,EAAE;AAACG,YAAAA,WAAW,EAAEH,WAAW,GAAG,MAAH,GAAY,KAArC;AAA4CI,YAAAA,UAAU,EAAEJ,WAAW,GAAG,KAAH,GAAW;AAA9E,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANR;AAAA,SAAc,OAAMH,KAAM,EAA1B;AAAA;AAAA;AAAA;AAAA,cADJ;AAYH,KAlBM,CAAP;AAoBH,GAvBD;;AAyBAL,EAAAA,cAAc;AACda,EAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ,EAAiBF,QAAjB,EAA0BC,QAA1B;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA1CD;;KAAML,Q;AA4CN,eAAeA,QAAf","sourcesContent":["import MessageForm from \"./MessageForm\";\r\nimport MyMessage from \"./MyMessage\";\r\nimport TheirMessage from \"./TheirMessage\";\r\n\r\nconst ChatFeed = (props) =>{\r\n\r\n    const {chats, activeChat, userName, messages} = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    //For message rending in form of bubble\r\n    const renderMessages = () =>{\r\n        const keys = Object.keys(messages);\r\n\r\n        return keys.map((key,index)=>\r\n        {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index-1];\r\n            const isMyMessage = userName === message.sender.userName;\r\n            \r\n            return (\r\n                <div  key = {`msg_${index}`} style={{width : '100%'}}>\r\n                <div className=\"message-block\">\r\n                    {\r\n                        isMyMessage? <MyMessage/> : <TheirMessage/>\r\n                    }\r\n                </div>\r\n                        <div className=\"read-reciepts\" style={{marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px'}}>\r\n                            read-reciept\r\n                        </div>                   \r\n                </div>\r\n            );\r\n        })\r\n\r\n    }\r\n\r\n    renderMessages();\r\n    console.log(chat,userName,messages)\r\n    return (\r\n        <div>\r\n            ChatFeed\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nexport default ChatFeed;"]},"metadata":{},"sourceType":"module"}